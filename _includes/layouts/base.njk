<!doctype html>
<html lang="{{ metadata.language }}">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>{{ title or metadata.title }}</title>
		<meta name="description" content="{{ description or metadata.description }}">

		{#- Atom and JSON feeds included by default #}
		<link rel="alternate" href="/feed/feed.xml" type="application/atom+xml" title="{{ metadata.title }}">
		<link rel="alternate" href="/feed/feed.json" type="application/json" title="{{ metadata.title }}">

		{#- Uncomment this if you'd like folks to know that you used Eleventy to build your site!  #}
		{#- <meta name="generator" content="{{ eleventy.generator }}"> #}

		{#- Add Open Graph and Twitter card metadata for better social sharing #}
		<meta property="og:title" content="{{ title or metadata.title }}">
		<meta property="og:description" content="{{ description or metadata.description }}">
		<meta property="og:url" content="{{ page.url | htmlBaseUrl(metadata.url) }}">
		<meta property="og:type" content="{{ 'article' if layout == 'layouts/post.njk' else 'website' }}">
		<meta name="twitter:card" content="summary_large_image">
		<meta name="twitter:creator" content="@bjsmithxyz">
		<link rel="canonical" href="{{ page.url | htmlBaseUrl(metadata.url) }}">

		{#-
		CSS bundles are provided via the `eleventy-plugin-bundle` plugin:
		1. You can add to them using `{% css %}`
		2. You can get from them using `{% getBundle "css" %}` or `{% getBundleFileUrl "css" %}`
		3. You can do the same for JS: {% js %}{% endjs %} and <script>{% getBundle "js" %}</script>
		4. Learn more: https://github.com/11ty/eleventy-plugin-bundle
		#}

		{#- Add an arbitrary string to the bundle #}
		{%- css %}* { box-sizing: border-box; }{% endcss %}
		{#- Add the contents of a file to the bundle #}
		{%- css %}{% include "public/css/index.css" %}{% endcss %}
		{%- css %}{% include "public/css/theme-toggle.css" %}{% endcss %}
		{#- Or add from node_modules #}
		{# {%- css %}{% include "node_modules/prismjs/themes/prism-okaidia.css" %}{% endcss %} #}

		{#- Render the CSS bundle using Inlined CSS (for the fastest site performance in production) #}
		<style>{% getBundle "css" %}</style>
		{#- Renders the CSS bundle using a separate file, if you can't set CSP directive style-src: 'unsafe-inline' #}
		{#- <link rel="stylesheet" href="{% getBundleFileUrl "css" %}"> #}
	</head>
	<body>
		<a href="#skip" class="visually-hidden">Skip to main content</a>

		<header>
			<a href="/" class="home-link">{{ metadata.title }}</a>

			{#- Read more about `eleventy-navigation` at https://www.11ty.dev/docs/plugins/navigation/ #}
			<nav>
				<h2 class="visually-hidden">Top level navigation menu</h2>
				<ul class="nav">
				{%- for entry in collections.all | eleventyNavigation %}
					<li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
				{%- endfor %}
				<li class="nav-item">
					<button class="theme-toggle" id="theme-toggle" aria-label="Toggle dark/light mode">
						<span class="theme-toggle-icon">üåô</span>
					</button>
				</li>
				</ul>
			</nav>
		</header>

		<main id="skip">
			{{ content | safe }}
		</main>

		<footer></footer>

		<!-- Current page: {{ page.url | htmlBaseUrl }} -->
		
		<script>
			// Theme toggle functionality
			(function() {
				const themeToggle = document.getElementById('theme-toggle');
				const htmlElement = document.documentElement;
				const themeIcon = document.querySelector('.theme-toggle-icon');
				
				// Check for saved theme preference or use preferred color scheme
				const savedTheme = localStorage.getItem('theme');
				
				if (savedTheme === 'light') {
					htmlElement.classList.add('light-theme');
					themeIcon.textContent = '‚òÄÔ∏è';
				} else {
					themeIcon.textContent = 'üåô';
				}
				
				// Toggle theme on button click
				themeToggle.addEventListener('click', () => {
					htmlElement.classList.toggle('light-theme');
					
					if (htmlElement.classList.contains('light-theme')) {
						localStorage.setItem('theme', 'light');
						themeIcon.textContent = '‚òÄÔ∏è';
					} else {
						localStorage.setItem('theme', 'dark');
						themeIcon.textContent = 'üåô';
					}
				});
			})();
		</script>
	</body>
</html>
